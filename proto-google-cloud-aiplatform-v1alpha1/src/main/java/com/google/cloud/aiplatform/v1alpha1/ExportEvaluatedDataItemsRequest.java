/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/aiplatform/v1alpha1/model_service.proto

package com.google.cloud.aiplatform.v1alpha1;

/**
 *
 *
 * <pre>
 * Request message for [ModelService.ExportEvaluatedDataItems][google.cloud.aiplatform.v1alpha1.ModelService.ExportEvaluatedDataItems].
 * </pre>
 *
 * Protobuf type {@code google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest}
 */
public final class ExportEvaluatedDataItemsRequest extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest)
    ExportEvaluatedDataItemsRequestOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use ExportEvaluatedDataItemsRequest.newBuilder() to construct.
  private ExportEvaluatedDataItemsRequest(
      com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private ExportEvaluatedDataItemsRequest() {
    modelEvaluation_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
    return new ExportEvaluatedDataItemsRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  private ExportEvaluatedDataItemsRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10:
            {
              java.lang.String s = input.readStringRequireUtf8();

              modelEvaluation_ = s;
              break;
            }
          case 18:
            {
              com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
                      .Builder
                  subBuilder = null;
              if (outputConfig_ != null) {
                subBuilder = outputConfig_.toBuilder();
              }
              outputConfig_ =
                  input.readMessage(
                      com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest
                          .OutputConfig.parser(),
                      extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(outputConfig_);
                outputConfig_ = subBuilder.buildPartial();
              }

              break;
            }
          default:
            {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.aiplatform.v1alpha1.ModelServiceProto
        .internal_static_google_cloud_aiplatform_v1alpha1_ExportEvaluatedDataItemsRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.aiplatform.v1alpha1.ModelServiceProto
        .internal_static_google_cloud_aiplatform_v1alpha1_ExportEvaluatedDataItemsRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.class,
            com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.Builder.class);
  }

  public interface OutputConfigOrBuilder
      extends
      // @@protoc_insertion_point(interface_extends:google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     *
     *
     * <pre>
     * Required. The BigQuery location where the output is to be written to.
     * In the given project a new dataset will be created with name
     * `export_evaluated_dataitems_&lt;model-display-name&gt;_&lt;timestamp-of-export-call&gt;`
     * where &lt;model-display-name&gt; will be made BigQuery-dataset-name
     * compatible (e.g. most special characters will become underscores),
     * and timestamp will be in YYYY_MM_DDThh_mm_ss_sssZ "based on ISO-8601"
     * format. In the dataset an `evaluated_dataitems` table will be
     * created.
     * If the Model has both [instance][google.cloud.aiplatform.v1alpha1.PredictSchemata.instance_schema_uri]
     * and [prediction][google.cloud.aiplatform.v1alpha1.PredictSchemata.parameters_schema_uri] schemata
     * defined, the table will have columns that include:
     *  * Instances of the test data, as per the instance schema.
     *  * Ground truth of the test data, as per the prediction schema.
     *  * Modle predicted results on the instances. The column names are in the
     *    format of `predicted_&lt;field_name&gt;`. field_name is the corresponding
     *    field of the prediction as per prediction schema.
     * NOTE: For AutoML Tables, the ground truth is the target column. There is
     * only one prediction column, with the name `predicted_&lt;target_column&gt;`.
     * </pre>
     *
     * <code>
     * .google.cloud.aiplatform.v1alpha1.BigQueryDestination bigquery_destination = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return Whether the bigqueryDestination field is set.
     */
    boolean hasBigqueryDestination();
    /**
     *
     *
     * <pre>
     * Required. The BigQuery location where the output is to be written to.
     * In the given project a new dataset will be created with name
     * `export_evaluated_dataitems_&lt;model-display-name&gt;_&lt;timestamp-of-export-call&gt;`
     * where &lt;model-display-name&gt; will be made BigQuery-dataset-name
     * compatible (e.g. most special characters will become underscores),
     * and timestamp will be in YYYY_MM_DDThh_mm_ss_sssZ "based on ISO-8601"
     * format. In the dataset an `evaluated_dataitems` table will be
     * created.
     * If the Model has both [instance][google.cloud.aiplatform.v1alpha1.PredictSchemata.instance_schema_uri]
     * and [prediction][google.cloud.aiplatform.v1alpha1.PredictSchemata.parameters_schema_uri] schemata
     * defined, the table will have columns that include:
     *  * Instances of the test data, as per the instance schema.
     *  * Ground truth of the test data, as per the prediction schema.
     *  * Modle predicted results on the instances. The column names are in the
     *    format of `predicted_&lt;field_name&gt;`. field_name is the corresponding
     *    field of the prediction as per prediction schema.
     * NOTE: For AutoML Tables, the ground truth is the target column. There is
     * only one prediction column, with the name `predicted_&lt;target_column&gt;`.
     * </pre>
     *
     * <code>
     * .google.cloud.aiplatform.v1alpha1.BigQueryDestination bigquery_destination = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The bigqueryDestination.
     */
    com.google.cloud.aiplatform.v1alpha1.BigQueryDestination getBigqueryDestination();
    /**
     *
     *
     * <pre>
     * Required. The BigQuery location where the output is to be written to.
     * In the given project a new dataset will be created with name
     * `export_evaluated_dataitems_&lt;model-display-name&gt;_&lt;timestamp-of-export-call&gt;`
     * where &lt;model-display-name&gt; will be made BigQuery-dataset-name
     * compatible (e.g. most special characters will become underscores),
     * and timestamp will be in YYYY_MM_DDThh_mm_ss_sssZ "based on ISO-8601"
     * format. In the dataset an `evaluated_dataitems` table will be
     * created.
     * If the Model has both [instance][google.cloud.aiplatform.v1alpha1.PredictSchemata.instance_schema_uri]
     * and [prediction][google.cloud.aiplatform.v1alpha1.PredictSchemata.parameters_schema_uri] schemata
     * defined, the table will have columns that include:
     *  * Instances of the test data, as per the instance schema.
     *  * Ground truth of the test data, as per the prediction schema.
     *  * Modle predicted results on the instances. The column names are in the
     *    format of `predicted_&lt;field_name&gt;`. field_name is the corresponding
     *    field of the prediction as per prediction schema.
     * NOTE: For AutoML Tables, the ground truth is the target column. There is
     * only one prediction column, with the name `predicted_&lt;target_column&gt;`.
     * </pre>
     *
     * <code>
     * .google.cloud.aiplatform.v1alpha1.BigQueryDestination bigquery_destination = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    com.google.cloud.aiplatform.v1alpha1.BigQueryDestinationOrBuilder
        getBigqueryDestinationOrBuilder();
  }
  /**
   *
   *
   * <pre>
   * Output configuration for the exported DataItems.
   * </pre>
   *
   * Protobuf type {@code
   * google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig}
   */
  public static final class OutputConfig extends com.google.protobuf.GeneratedMessageV3
      implements
      // @@protoc_insertion_point(message_implements:google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig)
      OutputConfigOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use OutputConfig.newBuilder() to construct.
    private OutputConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }

    private OutputConfig() {}

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(UnusedPrivateParameter unused) {
      return new OutputConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
      return this.unknownFields;
    }

    private OutputConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10:
              {
                com.google.cloud.aiplatform.v1alpha1.BigQueryDestination.Builder subBuilder = null;
                if (bigqueryDestination_ != null) {
                  subBuilder = bigqueryDestination_.toBuilder();
                }
                bigqueryDestination_ =
                    input.readMessage(
                        com.google.cloud.aiplatform.v1alpha1.BigQueryDestination.parser(),
                        extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(bigqueryDestination_);
                  bigqueryDestination_ = subBuilder.buildPartial();
                }

                break;
              }
            default:
              {
                if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.aiplatform.v1alpha1.ModelServiceProto
          .internal_static_google_cloud_aiplatform_v1alpha1_ExportEvaluatedDataItemsRequest_OutputConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.aiplatform.v1alpha1.ModelServiceProto
          .internal_static_google_cloud_aiplatform_v1alpha1_ExportEvaluatedDataItemsRequest_OutputConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
                  .class,
              com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
                  .Builder.class);
    }

    public static final int BIGQUERY_DESTINATION_FIELD_NUMBER = 1;
    private com.google.cloud.aiplatform.v1alpha1.BigQueryDestination bigqueryDestination_;
    /**
     *
     *
     * <pre>
     * Required. The BigQuery location where the output is to be written to.
     * In the given project a new dataset will be created with name
     * `export_evaluated_dataitems_&lt;model-display-name&gt;_&lt;timestamp-of-export-call&gt;`
     * where &lt;model-display-name&gt; will be made BigQuery-dataset-name
     * compatible (e.g. most special characters will become underscores),
     * and timestamp will be in YYYY_MM_DDThh_mm_ss_sssZ "based on ISO-8601"
     * format. In the dataset an `evaluated_dataitems` table will be
     * created.
     * If the Model has both [instance][google.cloud.aiplatform.v1alpha1.PredictSchemata.instance_schema_uri]
     * and [prediction][google.cloud.aiplatform.v1alpha1.PredictSchemata.parameters_schema_uri] schemata
     * defined, the table will have columns that include:
     *  * Instances of the test data, as per the instance schema.
     *  * Ground truth of the test data, as per the prediction schema.
     *  * Modle predicted results on the instances. The column names are in the
     *    format of `predicted_&lt;field_name&gt;`. field_name is the corresponding
     *    field of the prediction as per prediction schema.
     * NOTE: For AutoML Tables, the ground truth is the target column. There is
     * only one prediction column, with the name `predicted_&lt;target_column&gt;`.
     * </pre>
     *
     * <code>
     * .google.cloud.aiplatform.v1alpha1.BigQueryDestination bigquery_destination = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return Whether the bigqueryDestination field is set.
     */
    public boolean hasBigqueryDestination() {
      return bigqueryDestination_ != null;
    }
    /**
     *
     *
     * <pre>
     * Required. The BigQuery location where the output is to be written to.
     * In the given project a new dataset will be created with name
     * `export_evaluated_dataitems_&lt;model-display-name&gt;_&lt;timestamp-of-export-call&gt;`
     * where &lt;model-display-name&gt; will be made BigQuery-dataset-name
     * compatible (e.g. most special characters will become underscores),
     * and timestamp will be in YYYY_MM_DDThh_mm_ss_sssZ "based on ISO-8601"
     * format. In the dataset an `evaluated_dataitems` table will be
     * created.
     * If the Model has both [instance][google.cloud.aiplatform.v1alpha1.PredictSchemata.instance_schema_uri]
     * and [prediction][google.cloud.aiplatform.v1alpha1.PredictSchemata.parameters_schema_uri] schemata
     * defined, the table will have columns that include:
     *  * Instances of the test data, as per the instance schema.
     *  * Ground truth of the test data, as per the prediction schema.
     *  * Modle predicted results on the instances. The column names are in the
     *    format of `predicted_&lt;field_name&gt;`. field_name is the corresponding
     *    field of the prediction as per prediction schema.
     * NOTE: For AutoML Tables, the ground truth is the target column. There is
     * only one prediction column, with the name `predicted_&lt;target_column&gt;`.
     * </pre>
     *
     * <code>
     * .google.cloud.aiplatform.v1alpha1.BigQueryDestination bigquery_destination = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The bigqueryDestination.
     */
    public com.google.cloud.aiplatform.v1alpha1.BigQueryDestination getBigqueryDestination() {
      return bigqueryDestination_ == null
          ? com.google.cloud.aiplatform.v1alpha1.BigQueryDestination.getDefaultInstance()
          : bigqueryDestination_;
    }
    /**
     *
     *
     * <pre>
     * Required. The BigQuery location where the output is to be written to.
     * In the given project a new dataset will be created with name
     * `export_evaluated_dataitems_&lt;model-display-name&gt;_&lt;timestamp-of-export-call&gt;`
     * where &lt;model-display-name&gt; will be made BigQuery-dataset-name
     * compatible (e.g. most special characters will become underscores),
     * and timestamp will be in YYYY_MM_DDThh_mm_ss_sssZ "based on ISO-8601"
     * format. In the dataset an `evaluated_dataitems` table will be
     * created.
     * If the Model has both [instance][google.cloud.aiplatform.v1alpha1.PredictSchemata.instance_schema_uri]
     * and [prediction][google.cloud.aiplatform.v1alpha1.PredictSchemata.parameters_schema_uri] schemata
     * defined, the table will have columns that include:
     *  * Instances of the test data, as per the instance schema.
     *  * Ground truth of the test data, as per the prediction schema.
     *  * Modle predicted results on the instances. The column names are in the
     *    format of `predicted_&lt;field_name&gt;`. field_name is the corresponding
     *    field of the prediction as per prediction schema.
     * NOTE: For AutoML Tables, the ground truth is the target column. There is
     * only one prediction column, with the name `predicted_&lt;target_column&gt;`.
     * </pre>
     *
     * <code>
     * .google.cloud.aiplatform.v1alpha1.BigQueryDestination bigquery_destination = 1 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.aiplatform.v1alpha1.BigQueryDestinationOrBuilder
        getBigqueryDestinationOrBuilder() {
      return getBigqueryDestination();
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
      if (bigqueryDestination_ != null) {
        output.writeMessage(1, getBigqueryDestination());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (bigqueryDestination_ != null) {
        size +=
            com.google.protobuf.CodedOutputStream.computeMessageSize(1, getBigqueryDestination());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj
          instanceof
          com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig)) {
        return super.equals(obj);
      }
      com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig other =
          (com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig) obj;

      if (hasBigqueryDestination() != other.hasBigqueryDestination()) return false;
      if (hasBigqueryDestination()) {
        if (!getBigqueryDestination().equals(other.getBigqueryDestination())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBigqueryDestination()) {
        hash = (37 * hash) + BIGQUERY_DESTINATION_FIELD_NUMBER;
        hash = (53 * hash) + getBigqueryDestination().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
        parseFrom(java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
        parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
        parseFrom(com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
        parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
        parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }

    public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
        parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }

    public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
        parseFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
        parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
        parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
    }

    public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
        parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
          PARSER, input, extensionRegistry);
    }

    public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
        parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
    }

    public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
        parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
          PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(
        com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
            prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     *
     *
     * <pre>
     * Output configuration for the exported DataItems.
     * </pre>
     *
     * Protobuf type {@code
     * google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig}
     */
    public static final class Builder
        extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
        implements
        // @@protoc_insertion_point(builder_implements:google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig)
        com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return com.google.cloud.aiplatform.v1alpha1.ModelServiceProto
            .internal_static_google_cloud_aiplatform_v1alpha1_ExportEvaluatedDataItemsRequest_OutputConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.google.cloud.aiplatform.v1alpha1.ModelServiceProto
            .internal_static_google_cloud_aiplatform_v1alpha1_ExportEvaluatedDataItemsRequest_OutputConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
                    .class,
                com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
                    .Builder.class);
      }

      // Construct using
      // com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }

      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
      }

      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (bigqueryDestinationBuilder_ == null) {
          bigqueryDestination_ = null;
        } else {
          bigqueryDestination_ = null;
          bigqueryDestinationBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.google.cloud.aiplatform.v1alpha1.ModelServiceProto
            .internal_static_google_cloud_aiplatform_v1alpha1_ExportEvaluatedDataItemsRequest_OutputConfig_descriptor;
      }

      @java.lang.Override
      public com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
          getDefaultInstanceForType() {
        return com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
            .getDefaultInstance();
      }

      @java.lang.Override
      public com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
          build() {
        com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig result =
            buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
          buildPartial() {
        com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig result =
            new com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig(
                this);
        if (bigqueryDestinationBuilder_ == null) {
          result.bigqueryDestination_ = bigqueryDestination_;
        } else {
          result.bigqueryDestination_ = bigqueryDestinationBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }

      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.setField(field, value);
      }

      @java.lang.Override
      public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }

      @java.lang.Override
      public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }

      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index,
          java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }

      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other
            instanceof
            com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig) {
          return mergeFrom(
              (com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig)
                  other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig other) {
        if (other
            == com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
                .getDefaultInstance()) return this;
        if (other.hasBigqueryDestination()) {
          mergeBigqueryDestination(other.getBigqueryDestination());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
            parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage =
              (com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig)
                  e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.cloud.aiplatform.v1alpha1.BigQueryDestination bigqueryDestination_;
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.cloud.aiplatform.v1alpha1.BigQueryDestination,
              com.google.cloud.aiplatform.v1alpha1.BigQueryDestination.Builder,
              com.google.cloud.aiplatform.v1alpha1.BigQueryDestinationOrBuilder>
          bigqueryDestinationBuilder_;
      /**
       *
       *
       * <pre>
       * Required. The BigQuery location where the output is to be written to.
       * In the given project a new dataset will be created with name
       * `export_evaluated_dataitems_&lt;model-display-name&gt;_&lt;timestamp-of-export-call&gt;`
       * where &lt;model-display-name&gt; will be made BigQuery-dataset-name
       * compatible (e.g. most special characters will become underscores),
       * and timestamp will be in YYYY_MM_DDThh_mm_ss_sssZ "based on ISO-8601"
       * format. In the dataset an `evaluated_dataitems` table will be
       * created.
       * If the Model has both [instance][google.cloud.aiplatform.v1alpha1.PredictSchemata.instance_schema_uri]
       * and [prediction][google.cloud.aiplatform.v1alpha1.PredictSchemata.parameters_schema_uri] schemata
       * defined, the table will have columns that include:
       *  * Instances of the test data, as per the instance schema.
       *  * Ground truth of the test data, as per the prediction schema.
       *  * Modle predicted results on the instances. The column names are in the
       *    format of `predicted_&lt;field_name&gt;`. field_name is the corresponding
       *    field of the prediction as per prediction schema.
       * NOTE: For AutoML Tables, the ground truth is the target column. There is
       * only one prediction column, with the name `predicted_&lt;target_column&gt;`.
       * </pre>
       *
       * <code>
       * .google.cloud.aiplatform.v1alpha1.BigQueryDestination bigquery_destination = 1 [(.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @return Whether the bigqueryDestination field is set.
       */
      public boolean hasBigqueryDestination() {
        return bigqueryDestinationBuilder_ != null || bigqueryDestination_ != null;
      }
      /**
       *
       *
       * <pre>
       * Required. The BigQuery location where the output is to be written to.
       * In the given project a new dataset will be created with name
       * `export_evaluated_dataitems_&lt;model-display-name&gt;_&lt;timestamp-of-export-call&gt;`
       * where &lt;model-display-name&gt; will be made BigQuery-dataset-name
       * compatible (e.g. most special characters will become underscores),
       * and timestamp will be in YYYY_MM_DDThh_mm_ss_sssZ "based on ISO-8601"
       * format. In the dataset an `evaluated_dataitems` table will be
       * created.
       * If the Model has both [instance][google.cloud.aiplatform.v1alpha1.PredictSchemata.instance_schema_uri]
       * and [prediction][google.cloud.aiplatform.v1alpha1.PredictSchemata.parameters_schema_uri] schemata
       * defined, the table will have columns that include:
       *  * Instances of the test data, as per the instance schema.
       *  * Ground truth of the test data, as per the prediction schema.
       *  * Modle predicted results on the instances. The column names are in the
       *    format of `predicted_&lt;field_name&gt;`. field_name is the corresponding
       *    field of the prediction as per prediction schema.
       * NOTE: For AutoML Tables, the ground truth is the target column. There is
       * only one prediction column, with the name `predicted_&lt;target_column&gt;`.
       * </pre>
       *
       * <code>
       * .google.cloud.aiplatform.v1alpha1.BigQueryDestination bigquery_destination = 1 [(.google.api.field_behavior) = REQUIRED];
       * </code>
       *
       * @return The bigqueryDestination.
       */
      public com.google.cloud.aiplatform.v1alpha1.BigQueryDestination getBigqueryDestination() {
        if (bigqueryDestinationBuilder_ == null) {
          return bigqueryDestination_ == null
              ? com.google.cloud.aiplatform.v1alpha1.BigQueryDestination.getDefaultInstance()
              : bigqueryDestination_;
        } else {
          return bigqueryDestinationBuilder_.getMessage();
        }
      }
      /**
       *
       *
       * <pre>
       * Required. The BigQuery location where the output is to be written to.
       * In the given project a new dataset will be created with name
       * `export_evaluated_dataitems_&lt;model-display-name&gt;_&lt;timestamp-of-export-call&gt;`
       * where &lt;model-display-name&gt; will be made BigQuery-dataset-name
       * compatible (e.g. most special characters will become underscores),
       * and timestamp will be in YYYY_MM_DDThh_mm_ss_sssZ "based on ISO-8601"
       * format. In the dataset an `evaluated_dataitems` table will be
       * created.
       * If the Model has both [instance][google.cloud.aiplatform.v1alpha1.PredictSchemata.instance_schema_uri]
       * and [prediction][google.cloud.aiplatform.v1alpha1.PredictSchemata.parameters_schema_uri] schemata
       * defined, the table will have columns that include:
       *  * Instances of the test data, as per the instance schema.
       *  * Ground truth of the test data, as per the prediction schema.
       *  * Modle predicted results on the instances. The column names are in the
       *    format of `predicted_&lt;field_name&gt;`. field_name is the corresponding
       *    field of the prediction as per prediction schema.
       * NOTE: For AutoML Tables, the ground truth is the target column. There is
       * only one prediction column, with the name `predicted_&lt;target_column&gt;`.
       * </pre>
       *
       * <code>
       * .google.cloud.aiplatform.v1alpha1.BigQueryDestination bigquery_destination = 1 [(.google.api.field_behavior) = REQUIRED];
       * </code>
       */
      public Builder setBigqueryDestination(
          com.google.cloud.aiplatform.v1alpha1.BigQueryDestination value) {
        if (bigqueryDestinationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bigqueryDestination_ = value;
          onChanged();
        } else {
          bigqueryDestinationBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The BigQuery location where the output is to be written to.
       * In the given project a new dataset will be created with name
       * `export_evaluated_dataitems_&lt;model-display-name&gt;_&lt;timestamp-of-export-call&gt;`
       * where &lt;model-display-name&gt; will be made BigQuery-dataset-name
       * compatible (e.g. most special characters will become underscores),
       * and timestamp will be in YYYY_MM_DDThh_mm_ss_sssZ "based on ISO-8601"
       * format. In the dataset an `evaluated_dataitems` table will be
       * created.
       * If the Model has both [instance][google.cloud.aiplatform.v1alpha1.PredictSchemata.instance_schema_uri]
       * and [prediction][google.cloud.aiplatform.v1alpha1.PredictSchemata.parameters_schema_uri] schemata
       * defined, the table will have columns that include:
       *  * Instances of the test data, as per the instance schema.
       *  * Ground truth of the test data, as per the prediction schema.
       *  * Modle predicted results on the instances. The column names are in the
       *    format of `predicted_&lt;field_name&gt;`. field_name is the corresponding
       *    field of the prediction as per prediction schema.
       * NOTE: For AutoML Tables, the ground truth is the target column. There is
       * only one prediction column, with the name `predicted_&lt;target_column&gt;`.
       * </pre>
       *
       * <code>
       * .google.cloud.aiplatform.v1alpha1.BigQueryDestination bigquery_destination = 1 [(.google.api.field_behavior) = REQUIRED];
       * </code>
       */
      public Builder setBigqueryDestination(
          com.google.cloud.aiplatform.v1alpha1.BigQueryDestination.Builder builderForValue) {
        if (bigqueryDestinationBuilder_ == null) {
          bigqueryDestination_ = builderForValue.build();
          onChanged();
        } else {
          bigqueryDestinationBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The BigQuery location where the output is to be written to.
       * In the given project a new dataset will be created with name
       * `export_evaluated_dataitems_&lt;model-display-name&gt;_&lt;timestamp-of-export-call&gt;`
       * where &lt;model-display-name&gt; will be made BigQuery-dataset-name
       * compatible (e.g. most special characters will become underscores),
       * and timestamp will be in YYYY_MM_DDThh_mm_ss_sssZ "based on ISO-8601"
       * format. In the dataset an `evaluated_dataitems` table will be
       * created.
       * If the Model has both [instance][google.cloud.aiplatform.v1alpha1.PredictSchemata.instance_schema_uri]
       * and [prediction][google.cloud.aiplatform.v1alpha1.PredictSchemata.parameters_schema_uri] schemata
       * defined, the table will have columns that include:
       *  * Instances of the test data, as per the instance schema.
       *  * Ground truth of the test data, as per the prediction schema.
       *  * Modle predicted results on the instances. The column names are in the
       *    format of `predicted_&lt;field_name&gt;`. field_name is the corresponding
       *    field of the prediction as per prediction schema.
       * NOTE: For AutoML Tables, the ground truth is the target column. There is
       * only one prediction column, with the name `predicted_&lt;target_column&gt;`.
       * </pre>
       *
       * <code>
       * .google.cloud.aiplatform.v1alpha1.BigQueryDestination bigquery_destination = 1 [(.google.api.field_behavior) = REQUIRED];
       * </code>
       */
      public Builder mergeBigqueryDestination(
          com.google.cloud.aiplatform.v1alpha1.BigQueryDestination value) {
        if (bigqueryDestinationBuilder_ == null) {
          if (bigqueryDestination_ != null) {
            bigqueryDestination_ =
                com.google.cloud.aiplatform.v1alpha1.BigQueryDestination.newBuilder(
                        bigqueryDestination_)
                    .mergeFrom(value)
                    .buildPartial();
          } else {
            bigqueryDestination_ = value;
          }
          onChanged();
        } else {
          bigqueryDestinationBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The BigQuery location where the output is to be written to.
       * In the given project a new dataset will be created with name
       * `export_evaluated_dataitems_&lt;model-display-name&gt;_&lt;timestamp-of-export-call&gt;`
       * where &lt;model-display-name&gt; will be made BigQuery-dataset-name
       * compatible (e.g. most special characters will become underscores),
       * and timestamp will be in YYYY_MM_DDThh_mm_ss_sssZ "based on ISO-8601"
       * format. In the dataset an `evaluated_dataitems` table will be
       * created.
       * If the Model has both [instance][google.cloud.aiplatform.v1alpha1.PredictSchemata.instance_schema_uri]
       * and [prediction][google.cloud.aiplatform.v1alpha1.PredictSchemata.parameters_schema_uri] schemata
       * defined, the table will have columns that include:
       *  * Instances of the test data, as per the instance schema.
       *  * Ground truth of the test data, as per the prediction schema.
       *  * Modle predicted results on the instances. The column names are in the
       *    format of `predicted_&lt;field_name&gt;`. field_name is the corresponding
       *    field of the prediction as per prediction schema.
       * NOTE: For AutoML Tables, the ground truth is the target column. There is
       * only one prediction column, with the name `predicted_&lt;target_column&gt;`.
       * </pre>
       *
       * <code>
       * .google.cloud.aiplatform.v1alpha1.BigQueryDestination bigquery_destination = 1 [(.google.api.field_behavior) = REQUIRED];
       * </code>
       */
      public Builder clearBigqueryDestination() {
        if (bigqueryDestinationBuilder_ == null) {
          bigqueryDestination_ = null;
          onChanged();
        } else {
          bigqueryDestination_ = null;
          bigqueryDestinationBuilder_ = null;
        }

        return this;
      }
      /**
       *
       *
       * <pre>
       * Required. The BigQuery location where the output is to be written to.
       * In the given project a new dataset will be created with name
       * `export_evaluated_dataitems_&lt;model-display-name&gt;_&lt;timestamp-of-export-call&gt;`
       * where &lt;model-display-name&gt; will be made BigQuery-dataset-name
       * compatible (e.g. most special characters will become underscores),
       * and timestamp will be in YYYY_MM_DDThh_mm_ss_sssZ "based on ISO-8601"
       * format. In the dataset an `evaluated_dataitems` table will be
       * created.
       * If the Model has both [instance][google.cloud.aiplatform.v1alpha1.PredictSchemata.instance_schema_uri]
       * and [prediction][google.cloud.aiplatform.v1alpha1.PredictSchemata.parameters_schema_uri] schemata
       * defined, the table will have columns that include:
       *  * Instances of the test data, as per the instance schema.
       *  * Ground truth of the test data, as per the prediction schema.
       *  * Modle predicted results on the instances. The column names are in the
       *    format of `predicted_&lt;field_name&gt;`. field_name is the corresponding
       *    field of the prediction as per prediction schema.
       * NOTE: For AutoML Tables, the ground truth is the target column. There is
       * only one prediction column, with the name `predicted_&lt;target_column&gt;`.
       * </pre>
       *
       * <code>
       * .google.cloud.aiplatform.v1alpha1.BigQueryDestination bigquery_destination = 1 [(.google.api.field_behavior) = REQUIRED];
       * </code>
       */
      public com.google.cloud.aiplatform.v1alpha1.BigQueryDestination.Builder
          getBigqueryDestinationBuilder() {

        onChanged();
        return getBigqueryDestinationFieldBuilder().getBuilder();
      }
      /**
       *
       *
       * <pre>
       * Required. The BigQuery location where the output is to be written to.
       * In the given project a new dataset will be created with name
       * `export_evaluated_dataitems_&lt;model-display-name&gt;_&lt;timestamp-of-export-call&gt;`
       * where &lt;model-display-name&gt; will be made BigQuery-dataset-name
       * compatible (e.g. most special characters will become underscores),
       * and timestamp will be in YYYY_MM_DDThh_mm_ss_sssZ "based on ISO-8601"
       * format. In the dataset an `evaluated_dataitems` table will be
       * created.
       * If the Model has both [instance][google.cloud.aiplatform.v1alpha1.PredictSchemata.instance_schema_uri]
       * and [prediction][google.cloud.aiplatform.v1alpha1.PredictSchemata.parameters_schema_uri] schemata
       * defined, the table will have columns that include:
       *  * Instances of the test data, as per the instance schema.
       *  * Ground truth of the test data, as per the prediction schema.
       *  * Modle predicted results on the instances. The column names are in the
       *    format of `predicted_&lt;field_name&gt;`. field_name is the corresponding
       *    field of the prediction as per prediction schema.
       * NOTE: For AutoML Tables, the ground truth is the target column. There is
       * only one prediction column, with the name `predicted_&lt;target_column&gt;`.
       * </pre>
       *
       * <code>
       * .google.cloud.aiplatform.v1alpha1.BigQueryDestination bigquery_destination = 1 [(.google.api.field_behavior) = REQUIRED];
       * </code>
       */
      public com.google.cloud.aiplatform.v1alpha1.BigQueryDestinationOrBuilder
          getBigqueryDestinationOrBuilder() {
        if (bigqueryDestinationBuilder_ != null) {
          return bigqueryDestinationBuilder_.getMessageOrBuilder();
        } else {
          return bigqueryDestination_ == null
              ? com.google.cloud.aiplatform.v1alpha1.BigQueryDestination.getDefaultInstance()
              : bigqueryDestination_;
        }
      }
      /**
       *
       *
       * <pre>
       * Required. The BigQuery location where the output is to be written to.
       * In the given project a new dataset will be created with name
       * `export_evaluated_dataitems_&lt;model-display-name&gt;_&lt;timestamp-of-export-call&gt;`
       * where &lt;model-display-name&gt; will be made BigQuery-dataset-name
       * compatible (e.g. most special characters will become underscores),
       * and timestamp will be in YYYY_MM_DDThh_mm_ss_sssZ "based on ISO-8601"
       * format. In the dataset an `evaluated_dataitems` table will be
       * created.
       * If the Model has both [instance][google.cloud.aiplatform.v1alpha1.PredictSchemata.instance_schema_uri]
       * and [prediction][google.cloud.aiplatform.v1alpha1.PredictSchemata.parameters_schema_uri] schemata
       * defined, the table will have columns that include:
       *  * Instances of the test data, as per the instance schema.
       *  * Ground truth of the test data, as per the prediction schema.
       *  * Modle predicted results on the instances. The column names are in the
       *    format of `predicted_&lt;field_name&gt;`. field_name is the corresponding
       *    field of the prediction as per prediction schema.
       * NOTE: For AutoML Tables, the ground truth is the target column. There is
       * only one prediction column, with the name `predicted_&lt;target_column&gt;`.
       * </pre>
       *
       * <code>
       * .google.cloud.aiplatform.v1alpha1.BigQueryDestination bigquery_destination = 1 [(.google.api.field_behavior) = REQUIRED];
       * </code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
              com.google.cloud.aiplatform.v1alpha1.BigQueryDestination,
              com.google.cloud.aiplatform.v1alpha1.BigQueryDestination.Builder,
              com.google.cloud.aiplatform.v1alpha1.BigQueryDestinationOrBuilder>
          getBigqueryDestinationFieldBuilder() {
        if (bigqueryDestinationBuilder_ == null) {
          bigqueryDestinationBuilder_ =
              new com.google.protobuf.SingleFieldBuilderV3<
                  com.google.cloud.aiplatform.v1alpha1.BigQueryDestination,
                  com.google.cloud.aiplatform.v1alpha1.BigQueryDestination.Builder,
                  com.google.cloud.aiplatform.v1alpha1.BigQueryDestinationOrBuilder>(
                  getBigqueryDestination(), getParentForChildren(), isClean());
          bigqueryDestination_ = null;
        }
        return bigqueryDestinationBuilder_;
      }

      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }

      // @@protoc_insertion_point(builder_scope:google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig)
    }

    // @@protoc_insertion_point(class_scope:google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig)
    private static final com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest
            .OutputConfig
        DEFAULT_INSTANCE;

    static {
      DEFAULT_INSTANCE =
          new com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig();
    }

    public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
        getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OutputConfig> PARSER =
        new com.google.protobuf.AbstractParser<OutputConfig>() {
          @java.lang.Override
          public OutputConfig parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new OutputConfig(input, extensionRegistry);
          }
        };

    public static com.google.protobuf.Parser<OutputConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OutputConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
        getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }
  }

  public static final int MODEL_EVALUATION_FIELD_NUMBER = 1;
  private volatile java.lang.Object modelEvaluation_;
  /**
   *
   *
   * <pre>
   * Required. The resource name of the ModelEvaluation whose evaluated DataItems are to
   * be exported.
   * Format:
   * `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
   * </pre>
   *
   * <code>
   * string model_evaluation = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The modelEvaluation.
   */
  public java.lang.String getModelEvaluation() {
    java.lang.Object ref = modelEvaluation_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      modelEvaluation_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Required. The resource name of the ModelEvaluation whose evaluated DataItems are to
   * be exported.
   * Format:
   * `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
   * </pre>
   *
   * <code>
   * string model_evaluation = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
   * </code>
   *
   * @return The bytes for modelEvaluation.
   */
  public com.google.protobuf.ByteString getModelEvaluationBytes() {
    java.lang.Object ref = modelEvaluation_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      modelEvaluation_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int OUTPUT_CONFIG_FIELD_NUMBER = 2;
  private com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
      outputConfig_;
  /**
   *
   *
   * <pre>
   * Required. The desired output location and configuration.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig output_config = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return Whether the outputConfig field is set.
   */
  public boolean hasOutputConfig() {
    return outputConfig_ != null;
  }
  /**
   *
   *
   * <pre>
   * Required. The desired output location and configuration.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig output_config = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   *
   * @return The outputConfig.
   */
  public com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
      getOutputConfig() {
    return outputConfig_ == null
        ? com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
            .getDefaultInstance()
        : outputConfig_;
  }
  /**
   *
   *
   * <pre>
   * Required. The desired output location and configuration.
   * </pre>
   *
   * <code>
   * .google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig output_config = 2 [(.google.api.field_behavior) = REQUIRED];
   * </code>
   */
  public com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfigOrBuilder
      getOutputConfigOrBuilder() {
    return getOutputConfig();
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!getModelEvaluationBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, modelEvaluation_);
    }
    if (outputConfig_ != null) {
      output.writeMessage(2, getOutputConfig());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getModelEvaluationBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, modelEvaluation_);
    }
    if (outputConfig_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, getOutputConfig());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest)) {
      return super.equals(obj);
    }
    com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest other =
        (com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest) obj;

    if (!getModelEvaluation().equals(other.getModelEvaluation())) return false;
    if (hasOutputConfig() != other.hasOutputConfig()) return false;
    if (hasOutputConfig()) {
      if (!getOutputConfig().equals(other.getOutputConfig())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + MODEL_EVALUATION_FIELD_NUMBER;
    hash = (53 * hash) + getModelEvaluation().hashCode();
    if (hasOutputConfig()) {
      hash = (37 * hash) + OUTPUT_CONFIG_FIELD_NUMBER;
      hash = (53 * hash) + getOutputConfig().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest parseFrom(
      java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest parseFrom(
      byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest parseFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest
      parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest
      parseDelimitedFrom(
          java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(
      com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * Request message for [ModelService.ExportEvaluatedDataItems][google.cloud.aiplatform.v1alpha1.ModelService.ExportEvaluatedDataItems].
   * </pre>
   *
   * Protobuf type {@code google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest)
      com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.aiplatform.v1alpha1.ModelServiceProto
          .internal_static_google_cloud_aiplatform_v1alpha1_ExportEvaluatedDataItemsRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.aiplatform.v1alpha1.ModelServiceProto
          .internal_static_google_cloud_aiplatform_v1alpha1_ExportEvaluatedDataItemsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.class,
              com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.Builder.class);
    }

    // Construct using
    // com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      modelEvaluation_ = "";

      if (outputConfigBuilder_ == null) {
        outputConfig_ = null;
      } else {
        outputConfig_ = null;
        outputConfigBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.aiplatform.v1alpha1.ModelServiceProto
          .internal_static_google_cloud_aiplatform_v1alpha1_ExportEvaluatedDataItemsRequest_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest
        getDefaultInstanceForType() {
      return com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest
          .getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest build() {
      com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest buildPartial() {
      com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest result =
          new com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest(this);
      result.modelEvaluation_ = modelEvaluation_;
      if (outputConfigBuilder_ == null) {
        result.outputConfig_ = outputConfig_;
      } else {
        result.outputConfig_ = outputConfigBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest) {
        return mergeFrom(
            (com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(
        com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest other) {
      if (other
          == com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest
              .getDefaultInstance()) return this;
      if (!other.getModelEvaluation().isEmpty()) {
        modelEvaluation_ = other.modelEvaluation_;
        onChanged();
      }
      if (other.hasOutputConfig()) {
        mergeOutputConfig(other.getOutputConfig());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage =
            (com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest)
                e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object modelEvaluation_ = "";
    /**
     *
     *
     * <pre>
     * Required. The resource name of the ModelEvaluation whose evaluated DataItems are to
     * be exported.
     * Format:
     * `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
     * </pre>
     *
     * <code>
     * string model_evaluation = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return The modelEvaluation.
     */
    public java.lang.String getModelEvaluation() {
      java.lang.Object ref = modelEvaluation_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        modelEvaluation_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The resource name of the ModelEvaluation whose evaluated DataItems are to
     * be exported.
     * Format:
     * `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
     * </pre>
     *
     * <code>
     * string model_evaluation = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return The bytes for modelEvaluation.
     */
    public com.google.protobuf.ByteString getModelEvaluationBytes() {
      java.lang.Object ref = modelEvaluation_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        modelEvaluation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The resource name of the ModelEvaluation whose evaluated DataItems are to
     * be exported.
     * Format:
     * `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
     * </pre>
     *
     * <code>
     * string model_evaluation = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The modelEvaluation to set.
     * @return This builder for chaining.
     */
    public Builder setModelEvaluation(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      modelEvaluation_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The resource name of the ModelEvaluation whose evaluated DataItems are to
     * be exported.
     * Format:
     * `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
     * </pre>
     *
     * <code>
     * string model_evaluation = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @return This builder for chaining.
     */
    public Builder clearModelEvaluation() {

      modelEvaluation_ = getDefaultInstance().getModelEvaluation();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The resource name of the ModelEvaluation whose evaluated DataItems are to
     * be exported.
     * Format:
     * `projects/{project}/locations/{location}/models/{model}/evaluations/{evaluation}`
     * </pre>
     *
     * <code>
     * string model_evaluation = 1 [(.google.api.field_behavior) = REQUIRED, (.google.api.resource_reference) = { ... }
     * </code>
     *
     * @param value The bytes for modelEvaluation to set.
     * @return This builder for chaining.
     */
    public Builder setModelEvaluationBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      modelEvaluation_ = value;
      onChanged();
      return this;
    }

    private com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
        outputConfig_;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig,
            com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
                .Builder,
            com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest
                .OutputConfigOrBuilder>
        outputConfigBuilder_;
    /**
     *
     *
     * <pre>
     * Required. The desired output location and configuration.
     * </pre>
     *
     * <code>
     * .google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig output_config = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return Whether the outputConfig field is set.
     */
    public boolean hasOutputConfig() {
      return outputConfigBuilder_ != null || outputConfig_ != null;
    }
    /**
     *
     *
     * <pre>
     * Required. The desired output location and configuration.
     * </pre>
     *
     * <code>
     * .google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig output_config = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     *
     * @return The outputConfig.
     */
    public com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
        getOutputConfig() {
      if (outputConfigBuilder_ == null) {
        return outputConfig_ == null
            ? com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
                .getDefaultInstance()
            : outputConfig_;
      } else {
        return outputConfigBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The desired output location and configuration.
     * </pre>
     *
     * <code>
     * .google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig output_config = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder setOutputConfig(
        com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig value) {
      if (outputConfigBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        outputConfig_ = value;
        onChanged();
      } else {
        outputConfigBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The desired output location and configuration.
     * </pre>
     *
     * <code>
     * .google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig output_config = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder setOutputConfig(
        com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig.Builder
            builderForValue) {
      if (outputConfigBuilder_ == null) {
        outputConfig_ = builderForValue.build();
        onChanged();
      } else {
        outputConfigBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The desired output location and configuration.
     * </pre>
     *
     * <code>
     * .google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig output_config = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder mergeOutputConfig(
        com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig value) {
      if (outputConfigBuilder_ == null) {
        if (outputConfig_ != null) {
          outputConfig_ =
              com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
                  .newBuilder(outputConfig_)
                  .mergeFrom(value)
                  .buildPartial();
        } else {
          outputConfig_ = value;
        }
        onChanged();
      } else {
        outputConfigBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The desired output location and configuration.
     * </pre>
     *
     * <code>
     * .google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig output_config = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public Builder clearOutputConfig() {
      if (outputConfigBuilder_ == null) {
        outputConfig_ = null;
        onChanged();
      } else {
        outputConfig_ = null;
        outputConfigBuilder_ = null;
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Required. The desired output location and configuration.
     * </pre>
     *
     * <code>
     * .google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig output_config = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig.Builder
        getOutputConfigBuilder() {

      onChanged();
      return getOutputConfigFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Required. The desired output location and configuration.
     * </pre>
     *
     * <code>
     * .google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig output_config = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    public com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest
            .OutputConfigOrBuilder
        getOutputConfigOrBuilder() {
      if (outputConfigBuilder_ != null) {
        return outputConfigBuilder_.getMessageOrBuilder();
      } else {
        return outputConfig_ == null
            ? com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
                .getDefaultInstance()
            : outputConfig_;
      }
    }
    /**
     *
     *
     * <pre>
     * Required. The desired output location and configuration.
     * </pre>
     *
     * <code>
     * .google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig output_config = 2 [(.google.api.field_behavior) = REQUIRED];
     * </code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig,
            com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
                .Builder,
            com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest
                .OutputConfigOrBuilder>
        getOutputConfigFieldBuilder() {
      if (outputConfigBuilder_ == null) {
        outputConfigBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig,
                com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest.OutputConfig
                    .Builder,
                com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest
                    .OutputConfigOrBuilder>(getOutputConfig(), getParentForChildren(), isClean());
        outputConfig_ = null;
      }
      return outputConfigBuilder_;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest)
  private static final com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest
      DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest();
  }

  public static com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest
      getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ExportEvaluatedDataItemsRequest> PARSER =
      new com.google.protobuf.AbstractParser<ExportEvaluatedDataItemsRequest>() {
        @java.lang.Override
        public ExportEvaluatedDataItemsRequest parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ExportEvaluatedDataItemsRequest(input, extensionRegistry);
        }
      };

  public static com.google.protobuf.Parser<ExportEvaluatedDataItemsRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ExportEvaluatedDataItemsRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.aiplatform.v1alpha1.ExportEvaluatedDataItemsRequest
      getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
